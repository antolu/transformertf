[project]
name = "transformertf"
dynamic = ["version", "readme"]
description = "Package description"
license = { text = "Other/Proprietary License" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics",
]
requires-python = "~=3.11"
dependencies = [
    "einops >= 0.7, < 1.0",
    "lightning >= 2.0, < 3.0",
    "matplotlib >= 3.6, < 4.0",
    "numba >= 0.58, < 1.0",
    "numpy >= 1.21, < 2.0",
    "pandas >= 2.0, < 3.0",
    "pyarrow >= 12.0",
    "pytorch-optimizer >= 2.0, < 3.0",
    "rich >= 13.0.0",
    "scikit-learn >= 1.4, < 2.0",
    "scipy >= 1.12, < 2.0",
    "torch >2.0, <3.0",
]

[[project.authors]]
name = "Anton Lu"
email = "anton.lu@cern.ch"

[project.urls]
homepage = "https://gitlab.cern.ch/dsb/hysteresis/transformertf"
documentation = "https://acc-py.web.cern.ch/gitlab/dsb/hysteresis/transformertf/docs/stable/"
repository = "https://gitlab.cern.ch/dsb/hysteresis/transformertf"
changelog = "https://gitlab.cern.ch/dsb/hysteresis/transformertf/-/releases"


[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
doc = ["acc-py-sphinx", "myst-parser", "sphinx-copybutton"]
dev = ["pre-commit", "ruff", "mypy"]

[build-system]
requires = ["setuptools >= 61", "setuptools-scm[toml] ~= 6.0", "wheel"]
build-backend = "setuptools.build_meta"

# keep this for dynamic versioning
[tool.setuptools_scm]
write_to = "transformertf/_version.py"
local_scheme = "no-local-version"

[tool.setuptools.dynamic]
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.setuptools.packages.find]
include = ["transformertf*"]
namespaces = false
exclude = ["tests", "tests.*", "build"]

[project.scripts]
# project endpoints here

[tool.black]
target-version = ["py311"]
line-length = 79
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
]

line-length = 79
target-version = "py311"

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
ignore = ["E501"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
disallow_untyped_defs = true
plugins = "numpy.typing.mypy_plugin"

[[tool.mypy.overrides]]
module = ["matplotlib.*"]
ignore_missing_imports = true

# for pyright LSP
[tool.pyright]
reportPrivateImportUsage = "none"
