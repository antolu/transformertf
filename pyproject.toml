[project]
dependencies = [
  "matplotlib >= 3.6",
  "numpy >= 1.26, < 2.0",
  "pandas >= 2.0, < 3.0",
  "hystcomp-utils >= 0.2.1",
  "pybind11-rdp >= 0.1.4",
  "transformertf ~= 0.8.0",
  "torch ~= 2.5.1",
  "lightning ~= 2.2.2",
  "mlp-model-api >= 0.0.11, < 1.0",
]
name = "sps-mlp-hysteresis-compensation"
dynamic = ["version", "readme"]
description = "Hysteresis prediction on MLP."
license = { text = "Other/Proprietary License" }
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: Other/Proprietary License",
  "Natural Language :: English",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Physics",
]
requires-python = "~=3.11"

[[project.authors]]
name = "Anton Lu"
email = "anton.lu@cern.ch"

[project.urls]
homepage = "https://gitlab.cern.ch/dsb/hysteresis/sps-mlp-hysteresis-compensation"
documentation = "https://acc-py.web.cern.ch/gitlab/dsb/hysteresis/sps-mlp-hysteresis-compensation/docs/stable"
repository = "https://gitlab.cern.ch/dsb/hysteresis/sps-mlp-hysteresis-compensation"
changelog = "https://gitlab.cern.ch/dsb/hysteresis/sps-mlp-hysteresis-compensation/-/releases"

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
doc = ["acc-py-sphinx", "myst-parser", "sphinx-copybutton"]
dev = ["pre-commit", "ruff", "mypy"]
publication = ["cern-mlp-client ~= 1.0"]


[build-system]
requires = ["setuptools >= 61", "setuptools-scm[toml] ~= 6.0", "wheel"]
build-backend = "setuptools.build_meta"

# keep this for dynamic versioning
[tool.setuptools_scm]
write_to = "sps_mlp_hystcomp/_version.py"
local_scheme = "no-local-version"

[tool.setuptools.dynamic]
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.setuptools.packages.find]
where = ["."]
include = ["sps_mlp_hystcomp*"]
namespaces = false

[tool.setuptools.package-data]
sps_mlp_hystcomp = ["py.typed"]

[project.scripts]
# project endpoints here

# include black configuration for easy to use with VSCode and PyCharm
# autoformatter
# For pre-commit, only ruff is used.
[tool.black]
target-version = ["py311"]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  ".venv",
]

line-length = 88         # black and ruff default
target-version = "py311"

[tool.ruff.lint]
# All rules can be found here: https://docs.astral.sh/ruff/rules/
select = [
  "F",   # pyflakes
  "E",   # error  (pycodestyle)
  "W",   # warning (pycodestyle)
  "I",   # isort
  "N",   # naming  (pep8)
  "UP",  # pyupgrade
  "PLC", # convention  (pylint)
  "PLE", # error  (pylint)
  "PLW", # warning  (pylint)
  "PLR", # refactor  (pylint)
  # "D",  # docstring (pydocstyle),  # not enabled by default
  "PD",     # pandas
  "TRY",    # tryceratops
  "NPY",    # numpy
  "NPY201", # numpy 2.0
  "PERF",   # perflint
  "RUF",    # ruff
  # v flake8 v
  "B",
  "C4",
  "FBT",
  "A",
  "EM",
  "ISC",
  "FA",
  "G",
  "PIE",
  "PYI",
  "PT",
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SIM",
]
fixable = ["ALL"]
ignore = [
  "E501",
  "W505",
  "ISC001",
  "PD901",
  "PLW2901",
  "N812",
  "N806",
  "G004",
  "PLR2004",
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
disallow_untyped_defs = true
plugins = "numpy.typing.mypy_plugin"

[[tool.mypy.overrides]]
module = ["matplotlib.*"]
ignore_missing_imports = true

# for pyright LSP
[tool.pyright]
reportPrivateImportUsage = "none"
